<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Peta Deteksi Pohon (Orthophoto)</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
  />
  <style>
    #map { height: 100vh; }
  </style>
</head>
<body>
  <div id="map"></div>

  <script
    src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
  ></script>
  <script src="https://cdn.jsdelivr.net/npm/papaparse@5.3.2/papaparse.min.js"></script>

  <script>
    // Koordinat batas orthophoto Anda
    const photoBounds = [
      [-7.286019, 112.795400], // Pojok Barat Daya (SW)
      [-7.283247, 112.797375]  // Pojok Timur Laut (NE)
    ];

    // Inisialisasi peta, pusatkan ke tengah orthophoto, dan sesuaikan zoom awal
    // Pusat dari gdalinfo: Lat: -7.284633, Lon: 112.7963857
    const map = L.map('map').setView([-7.284633, 112.7963857], 16); // Set ke zoom 10

    L.tileLayer('MAP_TEST2/{z}/{x}/{y}.png', {
      attribution: 'Orthophoto &copy; Proyek Anda | Data Pohon &copy; Proyek Anda', // Sesuaikan atribusi
      minZoom: 10,
      maxZoom: 18,
      tms: false,
      tileSize: 256,
      bounds: photoBounds // Ini akan membatasi pemuatan tiles hanya dalam area ini
    }).addTo(map);

    // Opsional: untuk memastikan peta fokus ke area orthophoto Anda
    // map.fitBounds(photoBounds); // Anda bisa aktifkan ini jika setView kurang pas

    Papa.parse("tree_coordinates.csv", {
      download: true,
      header: true,
      skipEmptyLines: true,
      complete: function(results) {
        results.data.forEach(tree => {
          const lat = parseFloat(tree.Latitude);
          const lon = parseFloat(tree.Longitude);
          const id = tree.Tree_ID;

          if (!isNaN(lat) && !isNaN(lon)) {
            // Hanya tambahkan marker jika berada di dalam batas orthophoto (opsional, tapi bagus)
            if (lat >= photoBounds[0][0] && lat <= photoBounds[1][0] &&
                lon >= photoBounds[0][1] && lon <= photoBounds[1][1]) {
              L.circleMarker([lat, lon], {
                radius: 6,
                color: "green",
                fillColor: "lime",
                fillOpacity: 0.8
              })
              .bindTooltip(`📍 ${id}<br>Lon: ${lon}<br>Lat: ${lat}`)
              .addTo(map);
            }
          } else {
            console.warn("Data koordinat tidak valid:", tree);
          }
        });
      }
    });
  </script>
</body>
</html>